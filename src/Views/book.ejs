<!-- Book -->
<div class="container bookform" id="bookform">
    <h1 class="mt-4 mb-4 text-center text-primary"><b>Book Information</b></h1>
    <div class="card">
        <div class="card-header">
            <div class="row">
                <div class="col col-sm-9">Book Data</div>
                <div class="col col-sm-3">
                    <button type="button" id="createnewbook" class="btn btn-success btn-sm float-end">Create</button>
                </div>                
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-bordered" id="bookheaderdata">
                    <thead>
                        <tr>
                            <th scope="col">STT</th>
                            <th scope="col">FullName</th>
                            <th scope="col">Room</th>
                            <th scope="col">Payment</th>
                            <th scope="col">CheckIn</th>
                            <th scope="col">CheckOut</th>
                            <th scope="col">Status</th>
                            <th scope="col">Total</th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Bookdetail -->
<div class="container bookdetailform" id="bookdetailform" >
    <h1 class="mt-4 mb-4 text-center text-primary"><b>Book Detail</b></h1>

    <span id="message"></span>
    <div class="card">
        <form id="bookformdetail" class="bookformdetail">
            <input id="bookid" class="bookid" name="bookid" hidden>
            <div class="card-header">            
                <div class="row align-items-center">
                    <div class="col-2">   
                        <label class="form-label">Room</label>
                        <select name="roomid" id="roomid" class="form-select roomid">

                        </select>
                    </div>
                    <div class="col">
                        <label class="form-label">Payment</label>
                        <select name="paymentid" id="paymentid" class="form-select paymentid">
                        </select>
                    </div>
                    <div class="col">
                        <label class="form-label">CheckIn</label>
                            <input type="date" class="form-control"  id="checkindate" name="checkindate" readonly >
                    </div>
                    <div class="col">
                        <label class="form-label">CheckOut</label>
                        <input type="date" class="form-control"  id="checkoutdate" name="checkoutdate" readonly >
                    </div>
                    <div class="col-4">
                        <div class="row">
                            <div class="col">
                                <label class="form-label">Customer/RoomSerVice</label>
                            </div>
                            <div class="col">
    
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-6">
                                <select name="itemId" id="itemId" class="form-select itemId">
                                    <option value="customer">Add Customer</option>
                                    <option value="roomservice">Add RoomService</option>
                                </select>
                            </div>
                            <div class="col-2">
                                <button type="button" id="addItems" class="btn btn-success addItems">Add</button>
                            </div>
                            <div class="col-2">
                                <button type="button" id="saveBook" class="btn btn-success saveBook">Save</button>
                            </div>
                            <div class="col-2">
                                <button type="button" id="payBook" class="btn btn-success payBook">Pay</button>
                            </div>
                        </div>                    
                    </div>
                    <div class="row roominfo" id="roominfo">                    
                    </div>                             
    
                </div>            
            </div>
            <div class="card-body">
                <div class="row tablecustomer" id="tablecustomer">                                         
                </div>
                <div class="row tableroomservice" id="tableroomservice">                
                </div>
                
            </div>
                        
        </form>        
    </div>
</div>

<!-- Customer -->
<div class="modal" tabindex="-1" id="actionModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" id="customerForm" class="customerForm">
                <div class="modal-header" id="dynamicModalTitle">
                    <h5 class="modal-title"></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">FullName</label>                        
                        <input type="text" name="fullname" list="listcustomer" id="fullname" class="form-control"  required/>
                        <datalist id="listcustomer">

                        </datalist>
                    </div>
                    <div class="searchInfoCustomer" id="searchInfoCustomer"></div>
                </div>
                <div class="modal-footer">
                    <input type="hidden" name="id" id="id" />
                    <input type="hidden" name="action" id="action" value="Add" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" id="actionButton">Add</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Roomservice -->
<div class="modal" tabindex="-1" id="actionModalRoom">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" id="roomServiceForm" class="roomServiceForm">
                <div class="modal-header" id="dynamicModalTitleRoom">
                    <h5 class="modal-title"></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">RoomServicename</label>
                        <input type="text" name="roomservicename" list="listRoomService" id="roomservicename" class="form-control"  required/>
                        <datalist id="listRoomService">

                        </datalist>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Quantity</label>
                        <input type="number" name="quantity" id="quantity" class="form-control quantity" required/>
                    </div>
                                     
                </div>
                <div class="modal-footer">
                    
                    <input type="hidden" name="action" id="action" value="Add" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" id="actionButtonRoom">Add</button>
                </div>
            </form>
        </div>
    </div>
</div>
 


<script>
    const ViewModeCustomer = ["CREATE","EDITCUSTOMER","DELETECUSTOMER"]
    const ViewModeServiceDetail = ["CREATE","EDITSERVICEDETAIL","DELETESERVICEDETAIL"]
    var htmlOptionRoom =``;
    var htmlOptionCustomer = ``;    
    var htmlOptionRoomService = ``;
    var infoRoom =``;
    var htmlOptionPayment = ``;
    var rooms;
    var customers;   
    var customerDetails = [];
    var book; 
    var bookDetails;
    var customersBook =``;
    var roomServices = [];
    var indexRoomService ;
    var indexCustomer ;
    var roomServiceDetails = [];
    var serviceBook =``;
    var payments = ``;
    var sttCustomer = 0;
    var sttRoomservice = 0;
    var statusMode = "DEFAULT";
    const viewMode = ["GET", "POST", "PUT", "DELETE"];
    var indexMode = "GET";
    const BOOKMODE = ['GET', 'POST', 'PUT', 'DELETE'];
    var bookViewMode = '';
    const headerCustomer = `
                <div class="col">
                    <h4>Customers</h4>
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered" id="bookdetaildata">
                            <thead>
                                <tr>
                                    <th scope="col">STT</th>
                                    <th scope="col">FullName</th>
                                    <th scope="col">Phone</th>
                                    <th scope="col">CCCD</th>
                                    <th scope="col">CustomerType</th>
                                    <th scope="col"></th>
                                </tr>
                            </thead>
                            <tbody>`;
    var bodyCustomer =``;

    const footerCustomer = `</tbody>
                        </table>
                    </div>
                </div>
    `;

    const headerRoomService =`
                <div class="col">
                    <h4>Room Services</h4>
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered" id="serviceroom_data">
                            <thead>
                                <tr>
                                    <th scope="col">STT</th>
                                    <th scope="col">ServicesName</th>
                                    <th scope="col">Quantity</th>
                                    <th scope="col">Price (VND)</th>
                                    <th scope="col">Total (VND)</th>
                                    <th scope="col"></th>
                                </tr>
                            </thead>
                            <tbody>`
    
    var bodyRoomService = ``;
    const footerRoomService = `</tbody>
                        </table>
                    </div>
                </div>
    `;
    const displayRoomServiceDetail = () => {
        if(bodyRoomService.length > 0){
            document.querySelector('#tableroomservice').innerHTML = headerRoomService + bodyRoomService + footerRoomService;
        }   else {
            document.querySelector('#tableroomservice').innerHTML = '';
        }
    }
    const displayBookDetail = () => {
        if(bodyCustomer.length > 0){
            document.querySelector('#tablecustomer').innerHTML = headerCustomer + bodyCustomer + footerCustomer;
        }   else {
            document.querySelector('#tablecustomer').innerHTML = '';
        }
    }

    const bodyRoomServicesDetail = () =>{
        //Edit bi lõi
        this.bodyRoomService = "";
        for(let j = 0; j < this.roomServiceDetails.length; j++){
            for(let i = 0 ; i < this.roomServices.length ; i++){

                if(this.roomServiceDetails[j].id === this.roomServices[i].id) {
                    let roomservice = this.roomServices[i];
                    this.bodyRoomService += `
                                    <tr >
                                        <td>${parseInt(j+1)}<input id="roomserviceid" name="roomserviceid" value="${roomservice.id}" hidden></td>
                                        <td>${roomservice.roomservicename}</td>
                                        <td>${roomServiceDetails[j].quantity}<input id="quantityTemp${roomservice.id}" name="quantityTemp" value="${roomServiceDetails[j].quantity}" hidden></td>
                                        <td>${roomservice.price}</td>
                                        <td>${parseInt(roomservice.price) * parseInt(roomServiceDetails[j].quantity)}</td>                                       
                                        <td>
                                            <button type="button" class="btn btn-warning btn-sm editRoomservice" data-index="${parseInt(j+1)}" data-id="${roomservice.id}">
                                                Edit
                                            </button>
                                            &nbsp;
                                            <button type="button" class="btn btn-danger btn-sm deleteRoomservice" data-id="${parseInt(j+1)}">
                                                Delete
                                            </button>
                                        </td>
                                    </tr>
                                `;
                                
                }
            }
                
        }
        displayRoomServiceDetail();
    }

    const bodyCustomerDetail = () =>{
        //Edit bi lõi
        this.bodyCustomer = "";

        for(let j = 0; j < this.customerDetails.length; j++){
            for(let i = 0 ; i < this.customers.length ; i++){

                if(this.customerDetails[j].id === this.customers[i].id) {
                    let customer = this.customers[i];
                    this.bodyCustomer += `
                                        <tr>
                                            <td >${parseInt(j+1)}
                                                <input id="customerid" name="customerid" value="${customer.id}" hidden>
                                            </td>
                                            <td>${customer.fullname}</td>
                                            <td>${customer.phone}</td>
                                            <td>${customer.citizenIdentityCard}</td>
                                            <td>${customer.customertypename}</td>                                        
                                            <td>
                                                <button type="button" class="btn btn-warning btn-sm editBookdetail" data-index="${parseInt(j+1)}" data-id="${customer.id}" >
                                                    Edit
                                                </button>
                                                &nbsp;
                                                <button type="button" class="btn btn-danger btn-sm deleteBookdetail" data-id="${parseInt(j+1)}">
                                                    Delete
                                                </button>
                                            </td>
                                        </tr>
                                        `;
                                
                }
            }
                
        }
        displayBookDetail();
    }


    $(document).ready( function(){
    
        load_data();    
        function load_data() {  
            console.log("load_data Book")   
            bookViewMode = BOOKMODE[0];
            document.getElementById("bookform").style.display = 'block';
            document.getElementById("bookdetailform").style.display = 'none';
            $.ajax({
                url: '/book/all',
                method:"GET",
                dataType : "JSON",
                success:function( data)
                {
                    console.log("data load :", data)
                    var html = ''; 
                    if(data.book.length > 0) {
                        for(var count = 0; count < data.book.length; count++)
                        {
                            let bookRow = data.book[count];
                            let _stt = count+1;
                            html += `
                            <tr>
                                <td>`+ _stt +`</td>
                                <td>`+bookRow.fullname+`</td>
                                <td>`+bookRow.roomname+`</td>
                                <td>`+bookRow.paymentname+`</td>
                                <td>`+bookRow.checkindate+`</td>
                                <td>`+bookRow.checkoutdate+`</td>
                                <td>`+bookRow.statusname+`</td>
                                <td>`+bookRow.total+`</td>
                                <td>
                                    <button type="button" class="btn btn-warning btn-sm editbook" data-id="`+bookRow.id+`">
                                        Edit
                                    </button>
                                    &nbsp;
                                    <button type="button" class="btn btn-danger btn-sm deletebook" data-id="`+bookRow.id+`">
                                        Delete
                                    </button>
                                </td>
                            </tr>
                            `;
                        }
                    }   
                    document.querySelector('#bookheaderdata tbody').innerHTML = html;   
                }
            });
        }
        
        const loadBookDetail = (bookid = 0) => {
            $.ajax({
                url: '/book/load',
                method: viewMode[0],
                dataType : "JSON",
                success:function( data)
                {
                    console.log("loadBookDetail :::",data)
                    rooms = data.rooms;
                    customers = data.customers;
                    roomServices = data.roomservices;
                    payments = data.payments;
                    htmlOptionCustomer =``;
                    htmlOptionRoom = ``;                    
                    htmlOptionRoomService = ``;
                    var html = '';     
                    
                    if(customers && customers.length > 0) {
                        for(let index = 0 ; index <customers.length  ; index++) {
                            
                            htmlOptionCustomer += `<option value="${customers[index].fullname}" 
                            data-id="${customers[index].id}" >
                                `;
                        }                        
                        htmlOptionCustomer += `
                        `;                        
                    } 
                    
                    if(roomServices && roomServices.length > 0) {
                        for(let index = 0 ; index < roomServices.length  ; index++) {
                            htmlOptionRoomService += `<option value="${roomServices[index].roomservicename}" 
                            data-id="${roomServices[index].id}" >
                                `;
                        }                        
                        htmlOptionRoomService += `
                        `;                        
                    } 

                    if(rooms && rooms.length > 0) {
                        for(var count = 0; count < rooms.length; count++)
                        {
                           htmlOptionRoom += `<option value="${rooms[count].id}">${rooms[count].roomname}</option>
                            `;
                        }  
                    }
                    
                    if(payments && payments.length >0) {
                        for(let index = 0 ; index < payments.length; index++) {
                            htmlOptionPayment += `<option value="${payments[index].id}">${payments[index].paymentname}</option>
                            ` ;
                        }
                    }
                    document.getElementById('roomid').innerHTML = htmlOptionRoom;
                    document.getElementById('paymentid').innerHTML = htmlOptionPayment;
                    statusMode = ViewModeCustomer[0];
                    loadRoom();
                    
                    //load data for edit
                    if(bookid !== 0) {   
                                    
                        $.ajax({                            
                            url: `/book/${bookid}` ,
                            method: viewMode[0],
                            dataType : "JSON",
                            success:function( data){
                                console.log("edit data :::",data)
                                book = data.book;  
                                
                                roomServiceDetails = []; 
                                customerDetails = [];
                                
                                var loadBookDetail = data.bookdetail;
                                var loadRoomServices = data.roomservicedetail;
                                bodyRoomService = "";

                                bookDetails = data.bookdetail;
                           
                                if(book && book.length >0) {
                                    let temp = book[0];
                                    $('#roomid').val(temp.roomid)
                                    loadRoom();
                                    $('#paymentid').val(temp.paymentid)
                                    $('#bookid').val(temp.id)

                                }
                                if(loadBookDetail && loadBookDetail.length>0) {                              
                                    for(let i = 0; i < loadBookDetail.length; i++) {
                                        customerDetails.push({
                                            id: loadBookDetail[i].customerid
                                        })
                                    }
                                    bodyCustomerDetail();   
                                    
                                }
                                
                                if(loadRoomServices && loadRoomServices.length > 0) {
                                    
                                    for (let i = 0; i< loadRoomServices.length ; i++) {
                                        roomServiceDetails.push({
                                            id: loadRoomServices[i].roomserviceid,
                                            quantity: loadRoomServices[i].quantity
                                        })
                                    }
                                    bodyRoomServicesDetail();                                    
                                    
                                }                                
                                statusMode = "EDIT";
                            }, error: (error)=>{
                            }
                        })                        
                    }                    
                }
            });
            
        }


        const createBook = () => {
            $.ajax({
                url: '/book',
                method: bookViewMode,
                dataType : "JSON",
                success:function( data)
                {
                    console.log("Data :::",data)
                    rooms = data.rooms;
                    customers = data.customers;
                    roomServices = data.roomservices;
                    payments = data.payments;
                    htmlOptionCustomer =``;
                    htmlOptionRoom = ``;                    
                    htmlOptionRoomService = ``;
                    var html = '';     
                    
                    if(customers && customers.length > 0) {
                        for(let index = 0 ; index <customers.length  ; index++) {
                            
                            htmlOptionCustomer += `<option value="${customers[index].fullname}" 
                            data-id="${customers[index].id}" >
                                `;
                        }                        
                        htmlOptionCustomer += `
                        `;                        
                    } 
                    
                    if(roomServices && roomServices.length > 0) {
                        for(let index = 0 ; index < roomServices.length  ; index++) {
                            htmlOptionRoomService += `<option value="${roomServices[index].roomservicename}" 
                            data-id="${roomServices[index].id}" >
                                `;
                        }                        
                        htmlOptionRoomService += `
                        `;                        
                    } 

                    if(rooms && rooms.length > 0) {
                        for(var count = 0; count < rooms.length; count++)
                        {
                           htmlOptionRoom += `<option value="${rooms[count].id}">${rooms[count].roomname}</option>
                            `;
                        }  
                    }
                    
                    if(payments && payments.length >0) {
                        for(let index = 0 ; index < payments.length; index++) {
                            htmlOptionPayment += `<option value="${payments[index].id}">${payments[index].paymentname}</option>
                            ` ;
                        }
                    }
                    document.getElementById('roomid').innerHTML = htmlOptionRoom;
                    document.getElementById('paymentid').innerHTML = htmlOptionPayment;
                    statusMode = ViewModeCustomer[0];
                    loadRoom();
                    
                    //load data for edit
                    if(bookid !== 0) {   
                        console.log(" book id:::", bookid) 
                                    
                        $.ajax({                            
                            url: `/book/${bookid}` ,
                            method:"GET",
                            dataType : "JSON",
                            success:function( data){
                                console.log("edit data :::",data)
                                book = data.book;  
                                
                                roomServiceDetails = []; 
                                customerDetails = [];
                                
                                var loadBookDetail = data.bookdetail;
                                var loadRoomServices = data.roomservicedetail;
                                bodyRoomService = "";

                                bookDetails = data.bookdetail;
                           
                                if(book && book.length >0) {
                                    let temp = book[0];
                                    console.log("Temp ::: ",temp)
                                    $('#roomid').val(temp.roomid)
                                    loadRoom();
                                    $('#paymentid').val(temp.paymentid)
                                    $('#bookid').val(temp.id)

                                }
                                if(loadBookDetail && loadBookDetail.length>0) { 
                                    console.log("loadBookDetail ::", loadBookDetail)                                   
                                    for(let i = 0; i < loadBookDetail.length; i++) {
                                        customerDetails.push({
                                            id: loadBookDetail[i].customerid
                                        })
                                    }
                                    bodyCustomerDetail();   
                                    
                                }
                                
                                if(loadRoomServices && loadRoomServices.length > 0) {
                                    
                                    for (let i = 0; i< loadRoomServices.length ; i++) {
                                        roomServiceDetails.push({
                                            id: loadRoomServices[i].roomserviceid,
                                            quantity: loadRoomServices[i].quantity
                                        })
                                    }
                                    console.log("====> temp",roomServiceDetails);
                                    bodyRoomServicesDetail();                                    
                                    
                                }                                
                                statusMode = "EDIT";
                            }, error: (error)=>{
                                console.log("error::",error)
                            }
                        })                        
                    }                    
                }
            });
            
        }


        //Add new book
        $('#createnewbook').click(function(){
            bookViewMode = BOOKMODE[1];
            console.log("createnewbook")
            document.getElementById("bookform").style.display = 'none';
            document.getElementById("bookdetailform").style.display = 'block';
            bookDetails = "";
            loadBookDetail(); 

        /*
            console.log(_genderType);
            console.log(_customerType);
            document.querySelector('#sample_form div div .customertype').innerHTML = _customerType;  
            document.querySelector('#sample_form div div .gender').innerHTML = _genderType;  

            $('#dynamicModalTitle').text('Add Customer');
    
            $('#sample_form')[0].reset();
    
            $('#action').val('Add');
    
            $('#actionButton').text('Add');
            $(document).ready( function() {
                var now = new Date();
                var month = (now.getMonth() + 1);               
                var day = now.getDate();
                if (month < 10) 
                    month = "0" + month;
                if (day < 10) 
                    day = "0" + day;
                var today = now.getFullYear() + '-' + month + '-' + day;
                $('#dateofbirth').val(today);
            });
    
            $('#actionModal').modal('show');
            */
    
        });
    
        //EditBook
        $(document).on('click', '.editbook', function(){
            
            bookViewMode = BOOKMODE[2];
            var id = $(this).data('id');
            document.getElementById("bookform").style.display = 'none';
            document.getElementById("bookdetailform").style.display = 'block';
            loadBookDetail(id);            
            /*
    
            $('#dynamicModalTitle').text('Edit Data');
    
            $('#action').val('Edit');
    
            $('#actionButton').text('Edit');
    
            $('#actionModal').modal('show');
            console.log("Edit ajax")
            $.ajax({
                url:'/book/action',
                method:"POST",
                data:{id:id, action:'fetchSingle'},
                dataType:"JSON",
                success:function(data)
                {
                    
                    console.log("Data Edit::::", data);
                    $('#fullname').val(data.fullname);
                    $('#phone').val(data.phone);
                    $('#address').val(data.address);
                    $('#citizenIdentityCard').val(data.citizenIdentityCard);
                    $('#customertype').val(data.customertype);
                    $('#dateofbirth').val(data.dateofbirth);
                    $('#gender').val(data.gender);
                    $('#id').val(data.id);
                }
            });
            */
    
        });

        //DeleteBook
        $(document).on('click', '.deletebook', function(){
            bookViewMode = BOOKMODE[3];
            var id = $(this).data('id');
            alert(`Delete book with id :::  ${id} `)
            /*
            if(confirm("Are you sure you want to delete this data?"))
            {
                $.ajax({
                    url:'/book/action',
                    method:"POST",
                    data:{action:'delete', id:id},
                    dataType:"JSON",
                    success:function(data)
                    {
                        document.querySelector('#message').innerHTML = '<div class="alert alert-success">'+data.message+'</div>';

                        load_data();
                        setTimeout(function(){
                            document.querySelector('#message').innerHTML = '';
                        }, 5000);
                    }
                });
            }
            */
    
        });
    
        //BookDetail
        //Event Change roomid
        const selectRoom  =  document.getElementById("roomid").addEventListener("change", (event) =>{        
        infoRoom = ``;
            var idRoom = document.getElementById("roomid").value;            
            if(idRoom) {
            for(let i = 0; i < rooms.length ; i++) {
                if(idRoom +"" === rooms[i].id + "") {
                    infoRoom =`
                    <div class="col-2" >
                            <label class="form-label">Room Type</label>
                            <input type="text" value="${rooms[i].roomtypename}" name="roomtype" id="roomtype" class="form-control roomtype" readonly/>                            
                        </div>                    
                        <div class="col-4">
                            <label class="form-label">Description</label>
                            <input type="text" value="${rooms[i].description}" name="description" id="description" class="form-control description" readonly/>
                        </div> 
                        <div class="col-2">
                            <label class="form-label">Giá</label>
                            <input type="text" value="${rooms[i].price} VND" name="price" id="price" class="form-control price" readonly/>
                        </div> 
                    `;
                }
            }
        }      
            document.getElementById('roominfo').innerHTML = infoRoom;   
        })
        
        const loadRoom  = () => {            
            infoRoom = ``;
            var idRoom = document.getElementById("roomid").value;            
            if(idRoom) {
            for(let i = 0; i < rooms.length ; i++) {
                if(idRoom +"" === rooms[i].id + "") {
                    infoRoom =`
                    <div class="col-2" >
                            <label class="form-label">Room Type</label>
                            <input type="text" value="${rooms[i].roomtypename}" name="roomtype" id="roomtype" class="form-control roomtype" readonly/>                            
                        </div>                    
                        <div class="col-4">
                            <label class="form-label">Description</label>
                            <input type="text" value="${rooms[i].description}" name="description" id="description" class="form-control description" readonly/>
                        </div> 
                        <div class="col-2">
                            <label class="form-label">Giá</label>
                            <input type="text" value="${rooms[i].price} VND" name="price" id="price" class="form-control price" readonly/>
                        </div> 
                    `;
                }
            }
        }      
            document.getElementById('roominfo').innerHTML = infoRoom;   
       
        } 
     
        //addRoomService
        $('#addItems').click(function(){
            console.log("customer", htmlOptionCustomer)
            console.log("addItems")
            let _item = document.getElementById("itemId").value;
            console.log("Items ::: ", _item);
            if(_item === "customer") {
                $('#dynamicModalTitle').text('Add Customer');
    
                $('#customerForm')[0].reset();
        
                $('#action').val('Add');
        
                $('#actionButton').text('Add');    

                document.getElementById('listcustomer').innerHTML = htmlOptionCustomer;
        
                $('#actionModal').modal('show');
                statusMode = ViewModeCustomer[0];
            } else if (_item === "roomservice"){
                console.log("RoomService::: ")
                
                $('#dynamicModalTitleRoom').text('Add RoomService');
    
                $('#roomServiceForm')[0].reset();
        
                $('#action').val('Add');
        
                $('#actionButtonRoom').text('Add');
                document.getElementById('listRoomService').innerHTML = htmlOptionRoomService;
        
                $('#actionModalRoom').modal('show');
                statusMode = ViewModeServiceDetail[0];
            } else {
                window.alert("Bạn đã chọn sai chức năng")
            } 
            indexMode = viewMode[1];     
        });  

        $('#saveBook').click(function(event){
            alert("saveBook")
            event.preventDefault();
            $.ajax({
                url:'/book',
                method: bookViewMode,
                data:$('#bookformdetail').serialize(),
                action:"Add",
                dataType:"JSON",
                success:function(data)
                {
                    console.log("data ::::: ",data)
                    if(data && data.success) {
                        alert("Success");
                        load_data();
                        
                    }                    
    
                }
            });                 
        });       
    
        $('#customerForm').on('submit', function(event){            
            console.log("Mode ::: ", statusMode);
            let valueCustomer = document.getElementById("fullname").value;
            let _id = $("#listcustomer option").filter( function() {
                return this.value == valueCustomer;
            }).data('id');
            console.log("ajax::",_id)
            event.preventDefault();
            if(_id) {  
                
                $.ajax({
                    url:`/customer/${_id}`,
                    method: viewMode[0],
                    dataType:"JSON",
                    beforeSend:function(){
                        $('#actionButton').attr('disabled', 'disabled');
                    },
                    success:function(data)
                    {
                        if (data.success) {
                            if(indexMode === viewMode[1]) {
                                console.log("post")
                                customerDetails.push({
                                    id: data.id
                                })
                            } else {
                                customerDetails[parseInt(indexRoomService-1)].id = parseInt(data.id);
                            }
                        }
                        bodyCustomerDetail();
                        $('#actionButton').attr('disabled', false); 
                                                
                        $('#actionModal').modal('hide'); 
                    }
                });
            }
            else {
                alert("Khách hàng không tồn tại")
            } 
        });

        $('#roomServiceForm').on('submit', function(event){
            console.log("Mode ::: ", statusMode);
            let valueRoomService = document.getElementById("roomservicename").value;
            let _id = $("#listRoomService option").filter( function() {
                return this.value == valueRoomService;
            }).data('id');
            let _quantity = document.getElementById("quantity").value;

            console.log("_quantity :::", _quantity)
            event.preventDefault();
            if(_id) {  
                $.ajax({
                    url:`/roomservice/${_id}`,
                    method: viewMode[0],
                    dataType:"JSON",
                    beforeSend:function(){
                        $('#actionButtonRoom').attr('disabled', 'disabled');
                    },
                    success:function(data)
                    {
                        console.log("data ::: =>",data)
                        if(data && data.id) {
                            console.log("OKKKKK :::  ", statusMode)
                            if(statusMode === ViewModeServiceDetail[0]) {
                                roomServiceDetails.push({
                                    id: data.id,
                                    quantity: _quantity
                                })
                            } else {
                                roomServiceDetails[parseInt(indexRoomService-1)].id = parseInt(data.id);
                                roomServiceDetails[parseInt(indexRoomService-1)].quantity = parseInt(_quantity);
                            }                            
                        }                       
                        
                        bodyRoomServicesDetail();

                        $('#actionButtonRoom').attr('disabled', false); 
                        
                        $('#actionModalRoom').modal('hide'); 
                        statusMode = ViewModeServiceDetail[0];                       
                    }
                });
            }
            else {
                alert("RoomService không tồn tại")
            } 
            });        

            //Edit dang bị lỗi
        $(document).on('click', '.editBookdetail', function(){
            
            console.log("editBookdetail")            
    
            var id = $(this).data('id');

            indexCustomer = $(this).data('index');
            
            $('#dynamicModalTitle').text('Edit Data');
    
            $('#customerForm')[0].reset();

            $('#action').val('Edit');
    
            $('#actionButton').text('Edit');

            document.getElementById('listcustomer').innerHTML = htmlOptionCustomer;
            
            $('#actionModal').modal('show');
            console.log("id:::", id)
            $.ajax({
                url:`/customer/${id}`,
                method: viewMode[0],
                dataType:"JSON",
                success:function(data)
                {
                    console.log("Data::::", data);
                    $('#fullname').val(data.fullname);   
                    statusMode = ViewModeCustomer[1]; 
                }
            });
        });
        
        $(document).on('click', '.editRoomservice', function(){
            
            console.log("editRoomservice")            
    
            var id = $(this).data('id');
            indexRoomService = $(this).data('index');
            var temp = `quantityTemp${id}`
            var tempQuantity = document.getElementById(temp).value;
            $('#dynamicModalTitleRoom').text('Edit Data');

            $('#roomServiceForm')[0].reset();

            $('#action').val('Edit');
    
            $('#actionButtonRoom').text('Edit');

            document.getElementById('listRoomService').innerHTML = htmlOptionRoomService;
    
            $('#actionModalRoom').modal('show');  
            
            $.ajax({
                url:`/roomservice/${id}`,
                method:viewMode[0],
                dataType:"JSON",
                success:function(data)
                {      
                    //set quantity cua roomservice đó    
                       
                    $('#roomservicename').val(data.roomservicename);
                    $('#quantity').val(tempQuantity)
                    statusMode = ViewModeServiceDetail[1];
                }
            });           
    
        });
    
        //delete chuỗi theo ký tự đặc biệt <tr / t r >
        $(document).on('click', '.deleteBookdetail', function(){
    
            var id = $(this).data('id');
    
            if(confirm("Are you sure you want to delete this data?"))
            {
                console.log("okk")
                if(id && parseInt(id) > 0){
                    console.log("book", customerDetails);
                    customerDetails.splice(parseInt(id-1),1);
                    console.log("bookupdate", customerDetails);
                    bodyCustomerDetail();

                }
            }
    
        });
        
        $(document).on('click', '.deleteRoomservice', function(){
    
            var id = $(this).data('id');
            
            if(confirm(`Are you sure you want to delete this data? ${id}`))
            {
                if(id && parseInt(id) > 0){
                    roomServiceDetails.splice(parseInt(id-1),1);
                    console.log(roomServiceDetails);
                    bodyRoomServicesDetail();
                }                
            }
        });
    });
    
    </script>